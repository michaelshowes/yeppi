// Decimal Round
//
// A function to round numbers, with additional modes for ceil and floor
//
// $number = null - Number to round
// $digits = 0 - Number of digits to round to
// $mode = round - Mode to apply (round, ceil or floor)
//
// Function:
// @function decimal-round($number, $digits: 0, $mode: round) {
//   $n: 1;
//   // $number must be a number
//   @if type-of($number) != number {
//     @warn '#{ $number } is not a number.';
//     @return $number;
//   }
//   // $digits must be a unitless number
//   @if type-of($digits) != number {
//     @warn '#{ $digits } is not a number.';
//     @return $number;
//   } @else if not unitless($digits) {
//     @warn '#{ $digits } has a unit.';
//     @return $number;
//   }
//   @if $digits > 0 {
//     @for $i from 1 through $digits {
//       $n: $n * 10;
//     }
//   }
//   @if $mode == round {
//     @return math.div(round($number * $n), $n);
//   } @else if $mode == ceil {
//     @return math.div(ceil($number * $n), $n);
//   } @else if $mode == floor {
//     @return math.div(floor($number * $n), $n);
//   } @else {
//     @warn '#{ $mode } is undefined keyword.';
//     @return $number;
//   }
// }
//
// Usage:
// .h1 {
//   margin-bottom: decimal-round(40.2642, 2) * 1px;
// }
//
// Compiled:
// .h1 {
//   margin-bottom: 40.26px;
// }
//
// Styleguide Sass Functions.Decimal Round
@function decimal-round($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }
  @if $mode == round {
    @return math.div(round($number * $n), $n);
  } @else if $mode == ceil {
    @return math.div(ceil($number * $n), $n);
  } @else if $mode == floor {
    @return math.div(floor($number * $n), $n);
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}
